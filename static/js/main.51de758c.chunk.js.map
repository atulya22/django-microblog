{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/lookup.js","profiles/utils.js","profiles/badge.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","url","xhr","XMLHttpRequest","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","e","status","console","log","response","detail","window","location","href","indexOf","onerror","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBTN","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleServerResponse","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdspan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentAction","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookUp","profile","setProfile","setProfileLoading","useEffect","apiProfileDetail","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","path","pathname","idRegex","match","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponents","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","StrictMode","createElement","tweetEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.51de758c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n  let jsonData;\n\n  if (data){\n    jsonData = JSON.stringify(data)\n  }\n  const url = `http://localhost:8000/api${endpoint}`\n  const xhr = new XMLHttpRequest()\n  xhr.responseType ='json'\n  xhr.open(method, url)\n  const csrftoken = getCookie('csrftoken')\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n\n  if (csrftoken && method === 'POST') {\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFTOKEN\", csrftoken)\n\n  }\n  xhr.onload = function(e) {\n    if (xhr.status === 403) {\n      console.log(\"error\", e)\n      const detail = xhr.response.detail\n      if (detail === \"Authentication credentials were not provided.\") {\n        if (window.location.href.indexOf(\"login\") === -1)\n          window.location.href = \"/login?showLoginRequired=true\"\n      }\n    }\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function(e) {\n    callback({\"message\": \"There was an error\"}, 400)\n  }\n  xhr.send(jsonData)\n}","import {backendLookup} from '../lookup'\n\n\nexport const apiTweetFeed = function (callback, nextUrl) {\n    let endpoint = \"/tweets/feed/\"\n    if (nextUrl != null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    \n    console.log(endpoint)\n\n    backendLookup('GET', endpoint, callback) \n} \n\nexport const apiTweetCreate = function (newTweet, callback) {\n    backendLookup(\"POST\", \"/tweets/create/\", callback, {content: newTweet})\n  }\n\nexport const apiTweetAction = function(tweetId, action, callback) {\n    const data = {id: tweetId, action: action}\n    backendLookup('POST', '/tweets/action/', callback, data)   \n}\n  \nexport const apiTweetList = function(username, callback, nextUrl) {\n    let endpoint = \"/tweets\"\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    if (nextUrl != null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup('GET', endpoint, callback)  \n}\n\nexport const apiTweetDetail = function(tweet_id, callback) {\n    backendLookup('GET', `/tweets/${tweet_id}`, callback)  \n}\n","import React from 'react'\nimport {apiTweetAction} from './lookup'\n\n\nexport function ActionBTN(props) {\n    const {tweet, action, didPerformAction} = props \n    const likes = tweet.likes ? tweet.likes : 0\n\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleServerResponse = (response, status) => {\n      console.log(response)\n      console.log(status)\n      if ((status === 200 || status ===201) && didPerformAction) {\n        didPerformAction(response, status)\n      }\n    }\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleServerResponse)\n        console.log(action.type)\n    }\n\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n\n    return <button className={className} onClick={handleClick}> {display} </button>\n  }","import React from 'react'\n\n\n\nexport function UserLink(props) {\n  const {username} = props\n\n  const handleUserLink = (event) => {\n    window.location.href = `/profile/${username}`\n  }\n  return <span className='pointer' onClick={handleUserLink}>\n           {props.children}\n       </span>\n  \n}\n\nexport function UserDisplay(props) {\n  const {user, includeFullName, hideLink} = props\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null\n\n  return <React.Fragment>\n    {nameDisplay} {' '}\n   {hideLink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n  </React.Fragment>\n}\n\nexport function UserPicture(props) {\n  const {user, hideLink} = props\n  const userIdspan = <span className=\"mx-1 px-3 py-2 rounded cirlce bg-dark text-white\"> {user.username[0]} </span>\n  \n  return  hideLink === true ? userIdspan : <UserLink username={user.username}> {userIdspan} </UserLink>\n}","import {backendLookup} from '../lookup'\n\n\nexport const apiProfileDetail = function(username, callback) {\n    backendLookup('GET', `/profile/${username}`, callback)  \n}\n\nexport const apiProfileFollowToggle = function(username, action, callback) {\n    console.log(\"Error\")\n    console.log(`/profile/${username}/follow/`)\n    const data = {action:`${action && action}`.toLowerCase()}\n    backendLookup('POST', `/profile/${username}/follow/`, callback, data)  \n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nexport function DisplayCount(props) {\nreturn <span className={props.className}>{numeral(props.children).format(\"0a\")}</span>\n}","import React, {useState, useEffect} from 'react'\nimport {apiProfileDetail, apiProfileFollowToggle} from './lookup'\n\nimport {UserDisplay, UserPicture} from './components'\nimport {DisplayCount} from './utils'\n\n\nfunction ProfileBadge(props) {\n  const{user, didFollowToggle, profileLoading} = props\n  let currentAction = (user && user.is_following) ? \"Unfollow\" : \"Follow\"\n  currentAction = profileLoading ? \"Loading...\" : currentAction\n  console.log(user)\n  const handleFollowToggle = (event) => {\n    event.preventDefault()\n    console.log(event)\n    if (didFollowToggle && !profileLoading) {\n        didFollowToggle(currentAction)\n    }\n  }\n\nreturn user ? \n      <div>\n        <UserPicture user={user} hideLink />\n         <p><UserDisplay user={user} includeFullName hideLink /> </p>\n         <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\n         <p>Following <DisplayCount>{user.following_count}</DisplayCount></p>\n         <p>{user.location}</p>\n         <p>{user.bio}</p>\n         <button onClick={handleFollowToggle} className='btn btn-primary'>{currentAction}</button>\n      </div> \n      : null\n}\n\nexport function ProfileBadgeComponent(props) {\n    const {username} = props\n\n    const [didLookup, setDidLookUp] = useState(false)\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n\n  \n    const handleServerResponse = (response, status) => {\n        if (status === 200) {\n          setProfile(response)\n        }\n    }\n    useEffect(()=> {\n  \n      if(didLookup === false){\n        apiProfileDetail(username, handleServerResponse)\n        setDidLookUp(true)\n      }\n    }, [username, didLookup, setDidLookUp])\n\n    const handleNewFollow = (currentAction) => {\n      console.log(currentAction)\n      apiProfileFollowToggle(username, currentAction, (response, status) => {\n        console.log(response, status)\n        if (status ===200) {\n          setProfile(response)\n        }\n        setProfileLoading(false)\n\n      })\n      setProfileLoading(true)\n\n    }\n    return didLookup === false ? \"Loading...\" : profile ? <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\n}","import React, {useState} from 'react'\nimport {ActionBTN} from './buttons'\n\nimport {\n  UserDisplay,\n  UserPicture,\n  \n} from '../profiles'\n\nexport function ParentTweet(props) {\n    const {tweet} = props\n    return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent}/> : null\n  }\n  \n  export function Tweet(props) {\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter}  = props\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n    let  className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\n    const likeAction = {type: \"like\", display:\"Likes\"}\n    const unlikeAction = {type: \"unlike\", display:\"Unlikes\"}\n    const retweetAction = {type: \"retweet\", display:\"Repost\"}\n\n    const path = window.location.pathname\n    var idRegex = /(?<tweetid>\\d+)/\n    const match = path.match(idRegex)\n    const urlTweetId = match ? match.groups.tweetid : -1\n\n\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\n  \n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${tweet.id}`\n    }\n\n    const handlePerformAction = (newActionTweet, status) => {\n      if (status === 200) {\n        setActionTweet(newActionTweet)\n      } else if (status === 201) {\n        if (didRetweet) {\n          didRetweet(newActionTweet)\n        }\n      }\n    }\n\n    return <div className = {className}>\n      {isRetweet === true && <div className=\"mb-2\"> <span className=\"small text-muted\">Repost by <UserDisplay user={retweeter}/></span></div>}\n      <div className=\"d-flex\">\n        <div className=\"\">\n        <UserPicture user={tweet.user}/>\n        </div>\n      <div className='col-11'>\n      <div>\n        <p>\n          <UserDisplay includeFullName user={tweet.user} />\n        </p>\n        <p>{tweet.content}</p>\n        <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n      </div>\n       <div className='btn btn-group px-0'>\n       {(actionTweet && hideActions !== true) &&  <React.Fragment>\n            <ActionBTN tweet={actionTweet} didPerformAction={handlePerformAction}  action={likeAction} />\n            <ActionBTN tweet={actionTweet} didPerformAction={handlePerformAction}  action={unlikeAction} />\n            <ActionBTN tweet={actionTweet} didPerformAction={handlePerformAction}  action={retweetAction} />\n            </React.Fragment> \n       }\n        {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n\n      </div>\n      </div>\n    </div>\n    </div>\n\n  }","import React, {useEffect, useState} from 'react'\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\n export function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(()=>{\n        let final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n\n    }, [props.newTweets, tweets, tweetsInit])\n  \n    useEffect(() => {\n      //perform lookup\n      if (tweetsDidSet === false) {\n        const handleTweetListResponse  = (response, status) => {\n          if (status === 200) {\n              setNextUrl(response.next)\n              setTweetsInit(response.results)\n              setTweetsDidSet(true)\n\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleTweetListResponse)\n    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n      const updatedTweetsInit = [...tweetsInit]\n      updatedTweetsInit.unshift(newTweet)\n      setTweetsInit(updatedTweetsInit)\n\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(newTweet)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200) {\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          } else {\n            alert(\"There was an error\")\n          }\n        }\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n\n    }\n\n  \n    return <React.Fragment>{tweets.map((item, index)=>  {\n      return <Tweet \n      tweet={item} \n      didRetweet={handleDidRetweet}\n      className=\"my-5 py-5 border bg-white text-dark\" key={`${index}--{item.id}`}/>\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'> Load Next</button>}\n    </React.Fragment>\n  }","import React from 'react'\nimport {apiTweetCreate} from './lookup'\nimport { createPortal } from 'react-dom'\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n\n    const handleServerResponse = (response, status) => {\n      // Service response handler\n      if (status === 201) {\n        didTweet(response)\n      } else if (status === 403){\n        console.log(response)\n        alert(\"Please login to post a message\")\n      } else {\n        alert(\"An error has occured\")\n      }\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value \n        // Perform backend request\n        apiTweetCreate(newVal, handleServerResponse)\n  \n        textAreaRef.current.value = ''\n    }\n\n    return <div className={props.className}>\n            <form onSubmit={handleSubmit}>\n                <textarea  ref={textAreaRef} required={true} className='form-control'>\n                </textarea>\n                <button type='submit' className='btn btn-primary my-3'>Post Now</button>\n            </form>\n        </div>\n}\n\n\n","import React, {useEffect, useState} from 'react'\nimport {apiTweetFeed} from './lookup'\nimport {Tweet} from './detail'\n\n export function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n\n    const [tweetsDidSet, setTweetsDidSet] = useState(false)\n\n    useEffect(()=>{\n        let final = [...props.newTweets].concat(tweetsInit)\n        if (final.length !== tweets.length){\n            setTweets(final)\n        }\n\n    }, [props.newTweets, tweets, tweetsInit])\n  \n    useEffect(() => {\n      //perform lookup\n      if (tweetsDidSet === false) {\n        const handleTweetListResponse  = (response, status) => {\n          if (status === 200) {\n              setNextUrl(response.next)\n              setTweetsInit(response.results)\n              setTweetsDidSet(true)\n          }\n        }\n        apiTweetFeed(handleTweetListResponse)\n    }\n    }, [ tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n\n    const handleDidRetweet = (newTweet) => {\n      const updatedTweetsInit = [...tweetsInit]\n      updatedTweetsInit.unshift(newTweet)\n      setTweetsInit(updatedTweetsInit)\n\n      const updateFinalTweets = [...tweets]\n      updateFinalTweets.unshift(newTweet)\n      setTweets(updateFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault()\n      if (nextUrl !== null) {\n        const handleLoadNextResponse = (response, status) => {\n          if (status === 200) {\n            setNextUrl(response.next)\n            const newTweets = [...tweets].concat(response.results)\n            setTweetsInit(newTweets)\n            setTweets(newTweets)\n          }\n        }\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n\n    }\n\n  \n    return <React.Fragment>{tweets.map((item, index)=>  {\n      return <Tweet \n      tweet={item} \n      didRetweet={handleDidRetweet}\n      className=\"my-5 py-5 border bg-white text-dark\" key={`${index}--{item.id}`}/>\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'> Load Next</button>}\n    </React.Fragment>\n}\n","import React, {useEffect, useState} from 'react'\nimport {TweetsList} from './list'\nimport {TweetCreate} from './create'\nimport {apiTweetDetail} from './lookup'\nimport {FeedList} from './feed'\n\nimport {Tweet} from './detail'\n\nexport function FeedComponents(props) {\n\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === \"false\" ? false : true\n\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n  }\n\n  return <div className={props.className}>\n      {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n      <FeedList newTweets={newTweets} {...props}/>\n  </div> \n}\n\nexport function TweetsComponents(props) {\n\n    const [newTweets, setNewTweets] = useState([])\n    const canTweet = props.canTweet === \"false\" ? false : true\n\n    const handleNewTweet = (newTweet) => {\n      let tempNewTweets = [...newTweets]\n      tempNewTweets.unshift(newTweet)\n      setNewTweets(tempNewTweets)\n    }\n\n    return <div className={props.className}>\n        {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n        <TweetsList newTweets={newTweets} {...props}/>\n    </div> \n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookUp] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleServerResponse = (response, status) => {\n      if (status === 200) {\n        setTweet(response)\n      } else {\n        alert(\"Error finding tweet\")\n      }\n  }\n  useEffect(()=>{\n\n    if(didLookup === false){\n      apiTweetDetail(tweetId, handleServerResponse)\n      setDidLookUp(true)\n    }\n  }, [tweetId, didLookup, setDidLookUp])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\n}\n\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponents} from './tweets'\n\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponents />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponents, TweetsComponents, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\nimport {ProfileBadgeComponent} from './profiles'\n\nconst appEl = document.getElementById('root')\n\nif (appEl) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appEl\n  );\n}\n\nconst e = React.createElement\n\nconst tweetEl= document.getElementById('tweetme')\n\nif (tweetEl) {\n  ReactDOM.render(e(TweetsComponents, tweetEl.dataset),\n    tweetEl\n  );\n}\n\nconst tweetFeedEl= document.getElementById('tweetme-feed')\n\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponents, tweetFeedEl.dataset),\n  tweetFeedEl\n  );\n}\n\nconst tweetDetailElements = document.querySelectorAll('.tweetme-detail')\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container );\n})\n\nconst userProfileBadgeElement = document.querySelectorAll('.tweetme-profile-badge')\n\nuserProfileBadgeElement.forEach(container => {\n  ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container );\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}